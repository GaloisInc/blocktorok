-- TODOs
-- import model "P" defined in a different file (for the conduction condition)
-- units

config {
  step : 2 ;
  totalTime : 10;
  }

model StructureModel {
  input : qw;
  output : Tw;
  technique : FEM;
  boundary : Neumann(qw);
  physics : HeatStructure { 2} ; -- {P}

  const rhos = 9;  -- P.SolidDensity
  ks = P.SolidThermalConductivity;
  cps = P.SolidSpecificHeat;
  var Ts;   -- solid temperature
  rhos*cps*∇Ts- ks*△Ts = qw;
  -- FIXME Should this be Ts or Tw?
  }

model FluidModel {
  input : Tw;
  output : qw;
  technique : FVM;
  boundary: Dirichlet (Tw); -- P.InitialSolidTemperature
  physics : FluidFlow {2};
  -- a perfect gas with a ratio of specific heat
  gamma = standardAir.ratio_Specific_Heat;
  mu = sutherland.viscosityRef; -- viscosity
  R =  standardAir.GasConstant; -- specific gas constant
  Pr = constant_prandtl.LaminarPrandtlNumber; -- Prandtl number
  -- need to add vBar flowspeed in cartesian system
  var u; -- velocities in x,y,z directions
  var v;
  var w;
  var p; -- static pressure
  var T;  -- temperature from ideal gas equation of state
  var rhof; -- fluid density
  -- FIXME variables IBar, s, and E are used but undefined.
  }

couple StructureModel FluidModel {
  input : Tin;
  output : Tout;
  var qw;
  qw = FluidModel(Tin);
  }
