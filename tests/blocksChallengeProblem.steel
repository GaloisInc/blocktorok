-- This represents the rough shape of a typical LINK program. Every LINK
-- program consists of three sections:
--
-- 1. A global configuration
-- 2. Coupling configuration for every pair of models
-- 3. One or more models

-------------------------------------------------------------------------------

-- The configuration block will set globally important parameters. Including:
--  * duration (total time to run)
--  * stepsize
--  * input parameters for the coupling process
--
-- As defined the coupling block gets the surface temperature, Tw, as input
--  and runs for the total amount of time.
-- It is executed as "couple (couple (couple Tw))"

config {
    totalTime: 10 ms;
    Tw : 293 K;
    Run: couple Tw;
    -- Mach number = 5.94;
    -- Isothermal = 300 K
}

-------------------------------------------------------------------------------

-- The coupling blocks will effectively define the coordination between each
--  pair of models. The LINK compiler statically checks that for every pair of
--  models introduced above, there is a single coupling block.
--
-- The coupling blocks are introduced with the keyword `couple` followed by
--  * two identifiers (that each define a model)
--  * input parameters for the coupling process
--  * braces
--
-- Defined inside the braces can be
-- * equations governing the behavior at the interface between
--   the two models and any other information necessary to communicate data
--   between the models as appropriate.
-- * the algorithm describing the information flow
-- * the output that serves as input for the next run

couple ModelFluid ModelSolid arg {
  -- computes heat flux: qw
  qw = ModelFluid (arg)
  tw = ModelSolid (qw)
  output = tw
}

-------------------------------------------------------------------------------

-- Models are introduced with the keyword `model` followed by
--  * an identifier (starting with an alphabetic character followed by zero or
--    more letters, digits, underscores, or single-quotes). The identifier can
--    be thought of as the domain as one would see in a typical physics paper.
--  * input parameter for the model
--  * braces
--
-- Defined inside braces can be
--  * technique: solving technique.
--  * boundary : boundary conditions
--  * physics :type of physics
--  * math: (multiple) equations governing the behavior in model
--  * model : model parameters associated with that type of physics
--  * output : output parameter


-- Model that captures the structural heat transfer.
-- Input is heat flux (qw). The computations gets the solid temperature
--  distribution for the current time step using FEM.
model ModelStructure(qw){
    output : Tw
    technique: FEM;
    boundary : Neumann (qw)
    physics: Heat
    ModelType : Structure
    model : Structure.CONDUCTION_CONDITION_DEFINITION
    math :
      ps*cs * (∇Ts) = ∇ * (λs* ∇Ts) + Q;
      -ks* △Ts = Qs
      -- what is missing here?

}


-- Model that captures aerodynamic flow.
-- Get boundary heat flux (qw) using FVM
model ModelFluid (Tw){
    output : qw
    technique: FVM;
    boundary: Dirichlet (Tw);
    ModelType : Fluid
    model :
        Fluid.COMPRESSIBLE_FREESTREAM_DEFINITION
        Fluid.Sutherland
        Fluid.THERMALCONDUCTIVITYMODEL
        Fluid.standardAir
    math :
      ΩF. kF* △TF + po* cp*(u • ∇TF)  = QF
      -- what is missing here?
}
